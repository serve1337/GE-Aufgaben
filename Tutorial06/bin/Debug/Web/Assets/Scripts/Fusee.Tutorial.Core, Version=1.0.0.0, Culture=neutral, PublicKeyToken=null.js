/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm0D.System.String, $asm03.Fusee.Engine.Common.ITexture))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm0D.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0D.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm03.Fusee.Engine.Common.Cull)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0D.System.Single)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0D.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0D.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0D.System.Collections.Generic.KeyValuePair$b2.Of($asm0D.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0D.System.Boolean)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm03.Fusee.Engine.Common.ITexture)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0D.System.Int32)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0D.TypeRef("System.String"), $asm03.TypeRef("Fusee.Engine.Common.ITexture")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0D.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._model = new ($T02())(4);
    this._textures = $S01().Construct();
    this._shaderEffects = $S02().Construct();
    $T05().prototype._ctor.call(this);
    this.RC = rc;
    var vS = $T07().Get$b1($T06())("VertexShader.vert");
    var pS = $T07().Get$b1($T06())("PixelShader.frag");
    (this._textures).Add("Tree.5", (this.RC).CreateTexture($T07().Get$b1($T08())("Leaves.jpg").MemberwiseClone(), false));
    this._globalTexture = (this._textures).get_Item("Tree.5");
    var expr_A0 = JSIL.Array.New($T0A(), 1);
    var effectPassDeclaration = new ($T0A())();
    effectPassDeclaration.VS = vS;
    effectPassDeclaration.PS = pS;
    var expr_C1 = new ($T0B())();
    expr_C1.set_CullMode($T0C().Counterclockwise);
    expr_C1.set_ZEnable(true);
    effectPassDeclaration.StateSet = expr_C1;
    expr_A0[0] = effectPassDeclaration.MemberwiseClone();
    var expr_E2 = JSIL.Array.New($T0E(), 7);
    var effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0F().One.MemberwiseClone();
    expr_E2[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T10().$Box(1);
    expr_E2[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T10().$Box(1);
    expr_E2[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0F().Zero.MemberwiseClone();
    expr_E2[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0F().Zero.MemberwiseClone();
    expr_E2[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = this._globalTexture;
    expr_E2[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T10().$Box(0);
    expr_E2[6] = effectParameterDeclaration.MemberwiseClone();
    (this._shaderEffects).Add("Tree.5", new ($T11())(expr_A0, $T12().$Cast(expr_E2)));
    this._globalShader = (this._shaderEffects).get_Item("Tree.5");
    (this._textures).Add("Kugel.1", (this.RC).CreateTexture($T07().Get$b1($T08())("litsphere.jpg").MemberwiseClone(), false));
    var expr_272 = JSIL.Array.New($T0A(), 2);
    effectPassDeclaration = new ($T0A())();
    effectPassDeclaration.VS = $T07().Get$b1($T06())("VertexShaderGlobal.vert");
    effectPassDeclaration.PS = $T07().Get$b1($T06())("PixelShaderGlobal.frag");
    var expr_2A5 = new ($T0B())();
    expr_2A5.set_CullMode($T0C().Clockwise);
    expr_2A5.set_ZEnable(false);
    effectPassDeclaration.StateSet = expr_2A5;
    expr_272[0] = effectPassDeclaration.MemberwiseClone();
    effectPassDeclaration = new ($T0A())();
    effectPassDeclaration.VS = vS;
    effectPassDeclaration.PS = pS;
    var expr_2E1 = new ($T0B())();
    expr_2E1.set_CullMode($T0C().Counterclockwise);
    expr_2E1.set_ZEnable(true);
    effectPassDeclaration.StateSet = expr_2E1;
    expr_272[1] = effectPassDeclaration.MemberwiseClone();
    var expr_302 = JSIL.Array.New($T0E(), 7);
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0F().One.MemberwiseClone();
    expr_302[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T10().$Box(1);
    expr_302[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T10().$Box(1);
    expr_302[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0F().Zero.MemberwiseClone();
    expr_302[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0F().Zero.MemberwiseClone();
    expr_302[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = this._globalTexture;
    expr_302[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0E())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T10().$Box(0);
    expr_302[6] = effectParameterDeclaration.MemberwiseClone();
    (this._shaderEffects).Add("Kugel.1", new ($T11())(expr_272, $T12().$Cast(expr_302)));
    var enumerator = $T04().prototype.GetEnumerator.call(this._shaderEffects);

    while ($T13().prototype.MoveNext.call(enumerator)) {
      var current = $T13().prototype.get_Current.call(enumerator).MemberwiseClone();
      (current.get_Value()).AttachToContext(this.RC);
    }
    (this._globalShader).AttachToContext(this.RC);
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T15().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T17())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_OnMaterial (material) {
    var globalShader = new JSIL.BoxedVariable(null);
    var globalTexture = new JSIL.BoxedVariable(null);
    var name = this.SceneVisitor$CurrentNode$value.Name;
    var flag = !(this._shaderEffects).TryGetValue("objName", /* ref */ globalShader);
    if (flag) {
      globalShader.set(this._globalShader);
    }
    var flag2 = !(this._textures).TryGetValue("objName", /* ref */ globalTexture);
    if (flag2) {
      globalTexture.set(this._globalTexture);
    }
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (globalShader.get()).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag3 = material.Diffuse.Texture !== null;
      if (flag3) {
        var texture = material.Diffuse.Texture;
        var flag4 = !(this._textures).TryGetValue(texture, /* ref */ globalTexture);
        if (flag4) {
          var imgData = $T07().Get$b1($T08())(material.Diffuse.Texture).MemberwiseClone();
          var value = (this.RC).CreateTexture(imgData.MemberwiseClone(), false);
          (this._textures).Add(texture, value);
        }
        (this._textures).TryGetValue(texture, /* ref */ new JSIL.MemberReference(this, "_globalTexture"));
        (globalShader.get()).SetEffectParam("texture", this._globalTexture);
        (globalShader.get()).SetEffectParam("texmix", material.Diffuse.Mix);
      } else {
        (globalShader.get()).SetEffectParam("texmix", $T10().$Box(0));
      }
    } else {
      (globalShader.get()).SetEffectParam("albedo", $T0F().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (globalShader.get()).SetEffectParam("shininess", material.Specular.Shininess);
      (globalShader.get()).SetEffectParam("specfactor", material.Specular.Intensity);
      (globalShader.get()).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (globalShader.get()).SetEffectParam("shininess", $T1B().$Box(0));
      (globalShader.get()).SetEffectParam("specfactor", $T1B().$Box(0));
      (globalShader.get()).SetEffectParam("speccolor", $T0F().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (globalShader.get()).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (globalShader.get()).SetEffectParam("ambientcolor", $T0F().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    (this.RC).Render(this.LookupMesh(mesh));
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S03().CallStatic($T15(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T1D().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S03().CallStatic($T15(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S03().CallStatic($T15(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.Tutorial.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:true }, "AlbedoParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "ShininessParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "SpecFactorParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "SpecColorParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "AmbientColorParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));

    $.Field({Static:false, Public:false}, "TextureParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "TexMixParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_textures", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Fusee.Engine.Common.ITexture")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_shaderEffects", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_globalTexture", $asm03.TypeRef("Fusee.Engine.Common.ITexture"));

    $.Field({Static:false, Public:false}, "_globalShader", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tutorial */ 

(function Tutorial$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.Single)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0D.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0D.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0D.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Renderer)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0D.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0D.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0D.System.Math)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0D.System.Double)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.Fusee.Math.Core.M)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm0D.TypeRef("System.Single")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float2"), [$asm06.TypeRef("Fusee.Math.Core.float2"), $asm0D.TypeRef("System.Single")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [$asm06.TypeRef("Fusee.Math.Core.float3"), $asm0D.TypeRef("System.Single")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Double"), [
        $asm0D.TypeRef("System.Double"), $asm0D.TypeRef("System.Double"), 
        $asm0D.TypeRef("System.Double")
      ]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Single"), [$asm0D.TypeRef("System.Single")]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Single"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Tutorial__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function Tutorial_GetClosest () {
    var $temp00;
    var num = 3.40282347E+38;
    var result = null;

    for (var a$0 = this._trees._items, i$0 = 0, l$0 = (this._trees._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var transform = $T05().GetTransform(current, 0);
      var length = +($T06().op_Subtraction(this._wuggyTransform.Translation.MemberwiseClone(), transform.Translation)).get_Length();
      var flag = (length < num) && 
      (length < 1000);
      if (flag) {
        result = current;
        num = length;
      }
    }
    return result;
  }; 

  function Tutorial_Init () {
    var arg_5D_1 = null, arg_A4_1 = null, arg_EB_1 = null, arg_132_1 = null, arg_179_1 = null, arg_1C0_1 = null, arg_217_1 = null;
    this._scene = $T0A().Get$b1($T09())("WuggyLand.fus");
    this._sceneScale = $S00().CallStatic($T0B(), "CreateScale", null, 0.04).MemberwiseClone();
    this._renderer = new ($T0C())(this.RenderCanvas$RC$value);
    var arg_5D_0 = this._scene.Children;
    if ((arg_5D_1 = $T0E().$l$g9__26_0) === null) {
      arg_5D_1 = $T0E().$l$g9__26_0 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_0", $S01(), false, false));
    }
    var expr_67 = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_5D_0, arg_5D_1));
    this._wuggyTransform = (
      (expr_67 !== null)
         ? $T05().GetTransform(expr_67, 0)
         : null)
    ;
    var arg_A4_0 = this._scene.Children;
    if ((arg_A4_1 = $T0E().$l$g9__26_1) === null) {
      arg_A4_1 = $T0E().$l$g9__26_1 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_1", $S04(), false, false));
    }
    var expr_AE = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_A4_0, arg_A4_1));
    this._wgyWheelBigR = (
      (expr_AE !== null)
         ? $T05().GetTransform(expr_AE, 0)
         : null)
    ;
    var arg_EB_0 = this._scene.Children;
    if ((arg_EB_1 = $T0E().$l$g9__26_2) === null) {
      arg_EB_1 = $T0E().$l$g9__26_2 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_2", $S05(), false, false));
    }
    var expr_F5 = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_EB_0, arg_EB_1));
    this._wgyWheelBigL = (
      (expr_F5 !== null)
         ? $T05().GetTransform(expr_F5, 0)
         : null)
    ;
    var arg_132_0 = this._scene.Children;
    if ((arg_132_1 = $T0E().$l$g9__26_3) === null) {
      arg_132_1 = $T0E().$l$g9__26_3 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_3", $S06(), false, false));
    }
    var expr_13C = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_132_0, arg_132_1));
    this._wgyWheelSmallR = (
      (expr_13C !== null)
         ? $T05().GetTransform(expr_13C, 0)
         : null)
    ;
    var arg_179_0 = this._scene.Children;
    if ((arg_179_1 = $T0E().$l$g9__26_4) === null) {
      arg_179_1 = $T0E().$l$g9__26_4 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_4", $S07(), false, false));
    }
    var expr_183 = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_179_0, arg_179_1));
    this._wgyWheelSmallL = (
      (expr_183 !== null)
         ? $T05().GetTransform(expr_183, 0)
         : null)
    ;
    var arg_1C0_0 = this._scene.Children;
    if ((arg_1C0_1 = $T0E().$l$g9__26_5) === null) {
      arg_1C0_1 = $T0E().$l$g9__26_5 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_5", $S08(), false, false));
    }
    var expr_1CA = $S02().CallStatic($T0F(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T10(), "FindNodes", null, arg_1C0_0, arg_1C0_1));
    this._wgyNeckHi = (
      (expr_1CA !== null)
         ? $T05().GetTransform(expr_1CA, 0)
         : null)
    ;
    this._trees = $S09().Construct();
    var arg_21C_0 = this._trees;
    if ((arg_217_1 = $T0E().$l$g9__26_6) === null) {
      arg_217_1 = $T0E().$l$g9__26_6 = $T08().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__26_6", $S0A(), false, false));
    }
    $T11().prototype.AddRange.call(arg_21C_0, $S03().CallStatic($T10(), "FindNodes", null, this._scene.Children, arg_217_1));
    (this.RenderCanvas$RC$value.ClearColor = $S0B().Construct(1, 1, 1, 1));
  }; 

  function Tutorial_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function Tutorial_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T14().$Flags("Color", "Depth"));
    var flag = (+$T16().get_Keyboard().get_LeftRightAxis() !== 0) || 
    (+$T16().get_Keyboard().get_UpDownAxis() !== 0);
    if (flag) {
      this._keys = true;
    }
    var num = Math.fround($T17().Exp(-0.8 * +$T18().get_DeltaTime()));
    var twoPoint = $T16().get_Touch().get_TwoPoint();
    if (twoPoint) {
      if (!this._twoTouchRepeated) {
        this._twoTouchRepeated = true;
        $thisType._angleRollInit = +$T16().get_Touch().get_TwoPointAngle() - +$thisType._angleRoll;
        $thisType._offsetInit = $T1A().op_Subtraction($T16().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offset);
      }
      $thisType._zoomVel = +$T16().get_Touch().get_TwoPointDistanceVel() * -0.01;
      $thisType._angleRoll = +$T16().get_Touch().get_TwoPointAngle() - +$thisType._angleRollInit;
      $thisType._offset = $T1A().op_Subtraction($T16().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offsetInit);
    } else {
      this._twoTouchRepeated = false;
      $thisType._zoomVel = +$T16().get_Mouse().get_WheelVel() * -0.5;
      $thisType._angleRoll = +$thisType._angleRoll * (num * 0.8);
      $thisType._offset = $S0C().CallStatic($T1A(), "op_Multiply", null, $thisType._offset.MemberwiseClone(), num * 0.8);
    }
    var leftButton = $T16().get_Mouse().get_LeftButton();
    if (leftButton) {
      this._keys = false;
      $thisType._angleVelHorz = (-7 * +$T16().get_Mouse().get_XVel()) * 2E-06;
      $thisType._angleVelVert = (-7 * +$T16().get_Mouse().get_YVel()) * 2E-06;
    } else {
      var flag3 = $T16().get_Touch().GetTouchActive($T1C().Touchpoint_0) && 
      !$T16().get_Touch().get_TwoPoint();
      if (flag3) {
        this._keys = false;
        var velocity = $T16().get_Touch().GetVelocity($T1C().Touchpoint_0);
        $thisType._angleVelHorz = (-7 * +velocity.x) * 2E-06;
        $thisType._angleVelVert = (-7 * +velocity.y) * 2E-06;
      } else {
        var keys = this._keys;
        if (keys) {
          $thisType._angleVelHorz = (-7 * +$T16().get_Keyboard().get_LeftRightAxis()) * 0.002;
          $thisType._angleVelVert = (-7 * +$T16().get_Keyboard().get_UpDownAxis()) * 0.002;
        } else {
          $thisType._angleVelHorz = +$thisType._angleVelHorz * num;
          $thisType._angleVelVert = +$thisType._angleVelVert * num;
        }
      }
    }
    var num2 = (+$T16().get_Keyboard().get_WSAxis() * +$T16().get_Keyboard().get_ADAxis()) * 0.03;
    var num3 = +$T16().get_Keyboard().get_WSAxis() * -10;
    var num4 = +this._wuggyTransform.Rotation.y;
    num4 += num2;
    num4 = +$thisType.NormRot(num4);
    var float = this._wuggyTransform.Translation.MemberwiseClone();
    float = $T06().op_Addition(float.MemberwiseClone(), $S0D().CallStatic($T06(), "op_Multiply", null, $S0E().Construct(Math.fround(Math.sin(num4)), 0, Math.fround(Math.cos(num4))), num3));
    this._wuggyTransform.Rotation = $S0E().Construct(0, num4, 0);
    this._wuggyTransform.Translation = float.MemberwiseClone();
    this._wgyWheelBigR.Rotation = $T06().op_Addition(this._wgyWheelBigR.Rotation.MemberwiseClone(), $S0E().Construct((num3 * 0.008), 0, 0));
    this._wgyWheelBigL.Rotation = $T06().op_Addition(this._wgyWheelBigL.Rotation.MemberwiseClone(), $S0E().Construct((num3 * 0.008), 0, 0));
    this._wgyWheelSmallR.Rotation = $S0E().Construct((+this._wgyWheelSmallR.Rotation.x + (num3 * 0.016)), (-$T16().get_Keyboard().get_ADAxis() * 0.3), 0);
    this._wgyWheelSmallL.Rotation = $S0E().Construct((+this._wgyWheelSmallR.Rotation.x + (num3 * 0.016)), (-$T16().get_Keyboard().get_ADAxis() * 0.3), 0);
    var closest = this.GetClosest();
    var num5 = 0;
    var flag4 = closest !== null;
    if (flag4) {
      var float2 = $T06().op_Subtraction($T05().GetTransform(closest, 0).Translation.MemberwiseClone(), this._wuggyTransform.Translation);
      num5 = Math.fround(Math.atan2(-float2.x, -float2.z)) - +this._wuggyTransform.Rotation.y;
    }
    num5 = +$thisType.NormRot(num5);
    var num6 = num5 - +this._wgyNeckHi.Rotation.y;
    var flag5 = num6 > 3.14159274;
    if (flag5) {
      num6 -= 6.28318548;
    }
    var flag6 = num6 < -3.14159274;
    if (flag6) {
      num6 += 6.28318548;
    }
    var num7 = +this._wgyNeckHi.Rotation.y + Math.fround($S0F().CallStatic($T1E(), "Clamp", null, num6, -0.06, 0.06));
    num7 = +$thisType.NormRot(num7);
    this._wgyNeckHi.Rotation = $S0E().Construct(0, num7, 0);
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S10().CallStatic($T1E(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S11().CallStatic($T1E(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S10().CallStatic($T1E(), "MinAngle", null, $thisType._angleRoll);
    var right = $S12().CallStatic($T0B(), "op_Multiply", null, 
      $S12().CallStatic($T0B(), "op_Multiply", null, 
        $T0B().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T0B().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T0B().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var left = $T0B().LookAt(
      0, 
      20, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    this._renderer.View = $S12().CallStatic($T0B(), "op_Multiply", null, $S12().CallStatic($T0B(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone();
    var left2 = $T0B().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S12().CallStatic($T0B(), "op_Multiply", null, left2.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    $S13().CallVirtual("Traverse", null, this._renderer, this._scene.Children);
    this.Present();
  }; 

  function Tutorial_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    this._projection = $T0B().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tutorial", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__ctor
    );

    $.Method({Static:false, Public:false}, "GetClosest", 
      JSIL.MethodSignature.Return($asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      Tutorial_GetClosest
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tutorial_Init
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      Tutorial_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tutorial_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tutorial_Resize
    );

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 1.04719758);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.2617994);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneCenter", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_wuggyTransform", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelBigR", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelBigL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelSmallR", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelSmallL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyNeckHi", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_trees", $asm0D.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.Tutorial.Core.Renderer"));


    function Tutorial__cctor () {
      $thisType._offset = new $asm06.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm06.Fusee.Math.Core.float2();
      $thisType._angleHorz = 1.04719758;
      $thisType._angleVert = -0.2617994;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__26_0 (c) {
    return c.Name == "Wuggy";
  }; 

  function $l$gc_$lInit$gb__26_1 (c) {
    return c.Name == "WheelBigR";
  }; 

  function $l$gc_$lInit$gb__26_2 (c) {
    return c.Name == "WheelBigL";
  }; 

  function $l$gc_$lInit$gb__26_3 (c) {
    return c.Name == "WheelSmallR";
  }; 

  function $l$gc_$lInit$gb__26_4 (c) {
    return c.Name == "WheelSmallL";
  }; 

  function $l$gc_$lInit$gb__26_5 (c) {
    return c.Name == "NeckHi";
  }; 

  function $l$gc_$lInit$gb__26_6 (c) {
    return (c.Name.indexOf("Tree") != -1);
  }; 

  JSIL.MakeType({
      BaseType: $asm0D.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_0
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_1", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_1
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_2", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_2
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_3", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_3
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_4", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_4
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_5", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_5
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__26_6", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__26_6
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__26_0", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_1", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_2", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_3", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_4", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_5", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__26_6", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

